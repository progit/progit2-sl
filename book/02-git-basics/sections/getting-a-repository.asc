[[_getting_a_repo]]
=== Pridobivanje repozitorija Git

Projekt Git običajno pridobite z dvema pristopoma:

1. Vzamete lahko lokalni direktorij, ki trenutno ni pod nadzorom različic, in ga spremenite v repozitorij Git, ali pa
2. _Klonirate_ obstoječi repozitorij Git od drugod.

V kateremkoli od obeh primerov dobite na vaši lokalni napravi repozitorij Git, ki je pripravljen za delo.

==== Inicializacija repozitorija v obstoječem direktoriju

Če imate projektni direktorij, ki trenutno ni pod nadzorom različic, in ga želite začeti nadzirati z Gitom, morate najprej iti v ta projektni direktorij.
Če tega še niste počeli, je ukaz odvisen od sistema, ki ga poganjate:

za Linux:
[source,console]
----
$ cd /home/user/my_project
----
za macOS:
[source,console]
----
$ cd /Users/user/my_project
----
za Windows:
[source,console]
----
$ cd C:/Users/user/my_project
----

in vpišete:

[source,console]
----
$ git init
----

To ustvari nov poddirektorij z imenom `.git`, ki vsebuje vse vaše potrebne datoteke repozitorija - skelet repozitorija Git.
Na tej točki ni v vašem projektu še nič sledeno.
Glejte poglavje <<ch10-git-internals#ch10-git-internals>> za več informacij o tem, katere datoteke točno so vsebovane v direktoriju `.git`, ki ste ga ravno ustvarili.(((git commands, init)))

Če želite začeti nadzor različic obstoječih datotek (v primerjavi s praznim direktorijem), bi morali verjetno začeti slediti tem datotekam in narediti začetno potrditev.
To lahko naredite z nekaj ukazi `git add`, ki določi datoteke, ki jim želite slediti, ter nato izvedete `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'Initial project version'
----

Kaj te ukazi naredijo, bomo šli skozi čez minuto.
Na tej točki imate repozitorij Git s sledenimi datotekami in začetno potrditvijo.

[[_git_cloning]]
==== Kloniranje obstoječega repozitorija

Če želite dobiti kopijo obstoječega repozitorija Git, na primer projekt, ki mu želite prispevati, je ukaz, ki ga potrebujete, `git clone`.
Če ste že seznanjeni z ostalimi sistemi VCS, kot je Subversion, boste opazili, da je ukaz "clone" in ne "checkout".
To je pomembna razlika - namesto da dobite samo delovno kopijo, Git dobi polno kopijo skoraj vseh podatkov, ki jih ima strežnik.
Vsaka različica vsake datoteke zgodovine projekta je privzeto povlečena, ko poženete `git clone`.
V bistvu, če se disk vašega strežnika pokvari, lahko pogosto uporabite skoraj katerikoli klon kateregakoli odjemalca, da strežnik povrnete v stanje, v katerem je bil, ko je bil kloniran (morda boste izgubili nekatere kljuke strežniške strani in podobno, vendar vsi podatki v različicah bi morali bili tam - za več podrobnosti si oglejte poglavje <<ch04-git-on-the-server#_getting_git_on_a_server>>).

Repozitorij klonirate z `git clone <url>`.(((git commands, clone)))
Na primer, če želite klonirati Git povezano knjižnico imenovano `libgit2`, lahko to naredite na naslednji način:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

To ustvari direktorij imenovan `libgit2`, znotraj njega inicializira direktorij `.git`, povleče vse podatke za ta repozitorij in izvleče delovno kopijo zadnje različice.
Če greste v novi direktorij `libgit2`, boste tam videli projektne datoteke, ki so pripravljene za delo ali uporabo.

Če želite klonirati repozitorij v direktorij, imenovan nekaj drugega kot `libgit2`, lahko to določite kot naslednji argument v ukazni vrstici:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Ukaz izvede enako stvar kot prejšnji, vendar ciljni direktorij je imenovan `mylibgit`.

Git ima vrsto različnih prenosnih protokolov, ki jih lahko uporabite.
Prejšnji primer uporablja protokol `https://`, vendar videli boste lahko tudi `git://` ali `user@server:path/to/repo.git`, ki uporablja prenosni protokol SSH.
<<ch04-git-on-the-server#_getting_git_on_a_server>> vam bo predstavil vse možnosti, ki so na voljo, da jih strežnik lahko nastavi za dostopanje do vašega repozitorija Git ter prednosti in slabosti vsake.
