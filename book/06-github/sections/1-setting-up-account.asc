=== Namestitev in konfiguracija računa

(((GitHub, user accounts)))
Prva stvar, ki jo morate narediti, je nastaviti brezplačni uporabniški račun.
Enostavno obiščite https://github.com[^], izberite uporabniško ime, ki še ni zasedeno, podajte e-poštni naslov in geslo ter kliknite na velik zeleni gumb "`Sign up for GitHub`".

.Obrazec prijave GitHub
image::images/signup.png[Obrazec prijave GitHub]

Naslednja stvar, ki jo boste videli, je stran cenika za nadgrajene račune, vendar je to za sedaj v redu ignorirati.
GitHub vam bo poslal e-pošto, da potrdite naslov, ki ste ga podali.
Nadaljujte in to naredite, saj je precej pomembno (kot bomo videli kasneje).

[NOTE]
====
GitHub ponuja skoraj vso svojo funkcionalnost brezplačnim računom razen nekaj naprednih lastnosti.

GitHub plačljivi plani vključujejo napredna orodja in lastnosti, kot tudi povečane omejitve za brezplačne storitve, vendar tega ne bomo pokrivali v tej knjigi.
Za več informacij o paketih, ki so na voljo, in njihovi primerjavi, obiščite https://github.com/pricing[^].
====

Klik na logotip Octocat levo zgoraj na zaslonu vas bo popeljal na vašo stran plošče.
Sedaj ste pripravljeni za uporabo GitHub.

==== Dostop SSH

(((SSH keys, with GitHub)))
Od sedaj dalje se polno lahko povežete z repozitoriji Git z uporabo protokola `https://` in overitvijo z uporabniškim imenom in geslom, ki ste ju pravkar nastavili.
Vendar za enostavno kloniranje javnih projektov, se vam ni treba niti prijaviti - račun, ki ste ga ravnokar ustvarili prihaja v poštev nekoliko kasneje, ko bomo vejili projekte in potiskali v naše vejitve.

Če želite uporabljati daljave SSH, boste morali nastaviti javni ključ.
Če ga še nimate, glejte <<ch04-git-on-the-server#_generate_ssh_key>>.
Odprite vaše nastavitve računa z uporabo povezave zgoraj desno v oknu:

.Povezava "`Account settings`"
image::images/account-settings.png[Povezava “Account settings”]

Nato izberite sekcijo "`SSH keys`" tekom leve strani.

.Povezava "`SSH keys`"
image::images/ssh-keys.png[Povezava “SSH keys”]

Od tam kliknite na gumb "`Add an SSH key`", podajte ime za vaš ključ, v tekstovno polje prilepite vsebino vaše datoteke javnega ključa `~/.ssh/id_rsa.pub` (ali karkoli ste jo poimenovali) in kliknite "`Add key`".

[NOTE]
====
Bodite prepričani, da je ime vašega ključa SSH nekaj, kar si lahko zapomnite.
Vsakega of vaših ključev lahko poimenujete (npr. "Moj prenosnik" ali "Delovni račun"), tako da če potrebujete povrniti ključ kasneje, lahko enostavno veste, katerega iščete.
====

[[_personal_avatar]]
==== Vaš avatar

Naslednje, če želite, lahko zamenjate avatar, ki je generiran za vas s sliko po vaši izbiri.
Najprej pojdite na zavihek "`Profile`" (nad zavihkom SSH Keys) in kliknite "`Upload new picture`".

.Povezava "`Profile`"
image::images/your-profile.png[Povezava “Profile”]

Izbrali bomo kopijo logotipa Git, ki je na našem trdem disku, in nato dobimo priložnost, da ga obrežemo.

.Obrežite vaš naloženi avatar
image::images/avatar-crop.png[Obrežite vaš naloženi avatar]

Sedaj kjerkoli imate interakcijo na strani, bodo ljudje videli vaš avatar ob vašem uporabniškem imenu.

Če ste morda naložili avatar na popularno storitev Gravatar (pogosto uporabljeno za račune Wordpress), bo privzeto uporabljen ta avatar in tega koraka vam ni potrebno delati.

==== Naslov vaše e-pošte

Način, kako GitHub preslika vaša potrditve Git z vašim uporabnikom, je naslov e-pošte.
Če uporabljate več naslovov e-pošte v vaših potrditvah in želite, da jih GitHub ustrezno poveže, morate v sekciji Emails administracijske sekcije dodati vse e-poštne naslove, ki ste jih uporabili.

[[_add_email_addresses]]
.Dodajte vse vaše e-poštne naslove
image::images/email-settings.png[Dodajte vse vaše e-poštne naslove]

V <<_add_email_addresses>> lahko vidimo nekaj različnih možnih stanj.
Vrhnji naslov je preverjen in nastavljen kot primarni naslov, kar pomeni, da je to tam, kamor boste dobili kakršnokoli obvestilo in račune.
Drugi naslov je preverjen in tudi lahko nastavljen kot primaren, če ju želite zamenjati.
Zadnji naslov je nepreverjen, kar pomeni, da ga ne morate narediti kot primarnega.
Če GitHub vidi katerokoli od teh v sporočilih potrditev kateregakoli repozitorija na strani, ga bo od sedaj povezoval z vašim uporabnikom.

==== Dvostopenjsko overitev

Na koncu, bi morali za dodatno varnost zagotovo nastaviti dvostopenjsko overitev oz. "`2FA`".
Dvostopenjska overitev je mehanizem overitve, ki postaja zadnje čase bolj in bolj popularen, saj ublaži tveganje ogroženja vašega računa, če je vaše geslo kakorkoli ukradeno.
Vklop bo naredil, da vas GitHub vpraša za overitev na dva različna načina, torej če je en način ogrožen, napadalec ne bo uspel dostopati do vašega računa.

Nastavitev dvostopenjske overitve lahko najdete pod zavihkom Security pri nastavitvah vašega računa.

.2FA v zavihku Security
image::images/2fa-1.png[2FA v zavihku Security]

Če kliknete na gumb "`Set up two-factor authentication`", vas bo popeljalo na nastavitveno stran, kjer lahko izberete uporabo telefonske aplikacije, da se zgenerira vaša sekundarna koda ("`časovno osnovano enkratno geslo`"), lahko pa nastavite, da vam GitHub pošlje kodo preko SMS-a vsakič, ko se morate prijaviti.

Ko izberete, katero metodo imate raje, in sledite navodilom za nastavitev 2FA, bo vaš račun potem malo bolj varen ter morali boste ponuditi kodo kot dodatek k vašemu geslu vsakič, ko se boste prijavili v GitHub.
