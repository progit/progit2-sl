=== Namestitev in konfiguracija računa

(((GitHub, user accounts)))
Prva stvar, ki jo morate narediti je nastaviti brezplačni uporabniški račun.
Enostavno obiščite https://github.com[], izberite uporabniško ime, ki še ni zasedeno, ponudite e-poštni naslov in geslo in kliknite na velik zeleni ``Sign up for GitHub'' gumb.

.The GitHub sign-up form
image::images/signup.png[The GitHub sign-up form]

Naslednja stvar, ki jo vidite je stran cenika za nadgrajene plane, vendar je to varno ignorirati za sedaj.
GitHub vam bo poslal e-pošto, da potrdite naslov, ki ste ga ponudili.
Pojdite naprej in naredite to, je precej pomembno (kot boste videli kasneje).

[NOTE]
====
GitHub ponuja vso svojo funkcionalnost brezplačnim računom, z omejitvijo, da so vsi vaši projekti polno javni (vsi imajo bralni dostop).
GitHub plačljivi plani vključujejo določeno število privatnih projektov, vendar tega tu ne bomo pokrivali v tej knjigi.
====

Klik na Octocat logotip levo zgoraj na zaslonu vas bo popeljal na vašo stran plošče.
Sedaj ste pripravljeni uporabljati GitHub.

==== Dostop SSH

(((SSH keys, with GitHub)))
Od sedaj dalje, ste se polno sposobni povezati z repozitoriji Git z uporabo protokola `https://`, overitvijo z uporabniškim imenom in geslom, ki ste ga nastavili.
Vendar za enostavno kloniranje javnih projektov, se vam niti ni treba prijaviti - račun, ki ste ga ravno ustvarili prihaja v igro, ko forkamo projekte in potiskamo v fork-e nekoliko kasneje.

Če želite uporabljati oddaljeni SSH, boste morali nastaviti javni ključ.
(Če ga še nimate, glejte <<ch04-git-on-the-server#_generate_ssh_key>>.)
Odprite vaše nastavitve računa z uporabo povezave zgoraj desno v oknu:

.The "`Account settings`" link
image::images/account-settings.png[The “Account settings” link]

Nato izberite sekcijo ``SSH keys'' tekom leve strani.

.The "`SSH keys`" link
image::images/ssh-keys.png[The “SSH keys” link]

Od tam kliknite gumb "`Add an SSH key`", podajte ime vašega ključa, prilepite vsebino vaše datoteke javnega ključa `~/.ssh/id_rsa.pub` (ali karkoli ste jo poimenovali) v tekstovno polje in kliknite ``Add key''.

[NOTE]
====
Zagotovite, da je ime vašega ključa SSH nekaj, kar si lahko zapomnite. Vsakega of vaših ključev lahko poimenujete (npr. "Moj prenosnik" ali "Delovni račun"), tako da če potrebujete povrniti ključ kasneje, lahko enostavno poveste, katerega iščete.
====

[[_personal_avatar]]
==== Vaš avatar

Naslednje, če želite, lahko zamenjate avatar, ki je generiran za vas s sliko vaše izbire. Najprej pojdite v zavihek ``Profile'' (na zavihkom SSH Keys) in kliknite ``Upload new picture''.

.The "`Profile`" link
image::images/your-profile.png[The “Profile” link]

Izbrali bomo kopijo logotipa Git, ki je na našem trdem distku in nato dobimo priložnost, da ga obrežemo.

.Crop your uploaded avatar
image::images/avatar-crop.png[Crop your uploaded avatar]

Sedaj kjerkoli imate interakcijo na strani, bodo ljudje videli vaš avatar ob vašem uporabniškem imenu.

Če se zgodi, da ste naložili avatar na popularno storitev Gravatar (pogosto uporabljeno za račune Wordpress) bo privzeto uporabljen ta avatar in tega koraka vam ni potrebno delati.

==== Naslov vaše e-pošte

Način, kako GitHub preslika vaša pošiljanja Git v vašega uporabnika je naslov e-pošte. Če uporabljate več naslovov e-pošte v vaših pošiljanjih in želite, da jih GitHub ustrezno poveže, morate dodati naslov e-pošte, ki ste jo uporabili, v sekciji Emails administracijske sekcije.

[[_add_email_addresses]]
.Add all your email addresses
image::images/email-settings.png[Add all your email addresses]

V <<_add_email_addresses>> lahko vidimo nekaj različnih možnih stanj. Vrhnji naslov je preverjen in nastavljen na primarni naslov, kar pomeni, da je to tam, kjer boste dobili kakršnokoli obvestilo in račune. Drugi naslov je preverjen in tudi lahko nastavljen kot primaren, če ga želite zamenjati. Zadnji naslov je nepreverjen, kar pomeni, da ga ne morate narediti primarnega. Če GitHub vidi katerokoli od teh sporočil pošiljanj v kateremkoli repozitoriju na strani, ga bo povezal na vašega uporabnika.

==== Overitev dveh faktorjev

Končno za dodatno varnost, bi morali zagotovo nastaviti overitev dveh faktorjev ali ``2FA''. Overitev dveh faktorjev je mehanizem overitve, ki postaja zadnje čase bolj in bolj popularen, saj ublaži tveganje ogroženja vašega računa, če je vaše geslo kakorkoli ukradeno. Vključitev bo naredilo, da vas GitHub vpraša za dve različni metodi overitve, torej če je ena ogrožena, napadalec ne bo zmožen dostopati do vašega računa.

Nastavitev overitvije dveh faktorjev lahko najdete pod Security zavihkom nastavitev vašega računa.

.2FA in the Security Tab
image::images/2fa-1.png[2FA in the Security Tab]

Če kliknete na gumb ``Set up two-factor authentication'', vas bo popeljal na nastavitveno stran, kjer lahko izberete uporabo telefonske aplikacije, da generira vaše sekundarno kodo (``časovno osnovano enkratno geslo'') ali lahko naredite, da vam GitHub pošlje kodo preko SMS-a vsakič, ko se morate prijaviti.

Ko izberete katero metodo imate raje in sledite navodilom za nastavitev 2FA, bo vaš račun potem malo bolj varen in morali boste ponuditi kodo kot dodatek k vašemu geslu vsakič ko se boste prijavili v GitHub.
