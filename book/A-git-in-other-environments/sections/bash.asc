=== Git v Bashu

(((Bash)))(((Zaključevanje s tabulatorjem, Bash)))(((Pozivi lupine, Bash)))
Če ste uporabnik Basha, lahko izkoristite nekaj lastnosti svoje lupine, da naredite vašo izkušnjo z Gitom veliko bolj prijazno.
Git dejansko vključuje vtičnike za nekatere lupine, vendar privzeto niso vključeni.

Najprej morate pridobiti kopijo datoteke z dopolnitvami iz izvorne kode izdaje Git, ki jo uporabljate.
Preverite svojo različico tako, da vnesete `git version`, nato pa uporabite `git checkout tags/vX.Y.Z`, kjer `vX.Y.Z` ustreza različici Git, ki jo uporabljate.
Kopirajte datoteko `contrib/completion/git-completion.bash` nekam priročno, na primer v vaš domači imenik, in dodajte to v vašo datoteko `.bashrc`:

[source,shell]
----
. ~/git-completion.bash
----

Ko ste to opravili, spremenite svoj direktorij v repozitorij Git in vpišite:

[source,console]
----
$ git chec<tab>
----

… in Bash bo avtomatsko zaključil na `git checkout`.
To deluje z vsemi podukazi Gita, parametri ukazne vrstice in daljavami ter imeni referenc, kjer je ustrezno.

Uporabno je tudi prilagoditi vaš poziv ali terminal, da prikazuje informacije o trenutnem direktoriju Git.
To je lahko tako enostavno ali kompleksno, kakor želite, vendar so v splošnem nekateri deli informacij, ki jih večina ljudi želi, kot je trenutna veja in status delovnega direktorija.
Da to dodate k svojemu pozivu, samo kopirajte datoteko iz izvornega repozitorija Git `contrib/completion/git-prompt.sh` v vaš domači direktorij in dodajte nekaj takega v vaš `.bashrc`:

[source,shell]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

`\w` pomeni izpis trenutnega delovnega direktorija, `\$` izpiše del poziva `$` in `__git_ps1 " (%s)"` pokliče funkcijo, ki jo ponuja `git-prompt.sh` z argumentom oblikovanja.
Sedaj bo vaš poziv bash videti, kot da ste kjerkoli znotraj projekta nadzorovanega z Gitom:

.Prilagojeni poziv `bash`
image::images/git-bash.png[Prilagojeni poziv `bash`]

Oba od teh skriptov prihajata s koristno dokumentacijo; poglejte vsebino `git-completion.bash` in `git-prompt.sh` za več informacij.
