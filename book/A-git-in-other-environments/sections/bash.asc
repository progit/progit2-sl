=== Git v Bashu

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Če ste uporabnik Basha, lahko izkoristite nekaj lastnosti vaše lupine, da naredite vašo izkušnjo z Gitom veliko bolj prijazno.
Git dejansko vključuje vtičnike za nekatere lupine, vendar privzeto niso vključeni.

Najprej morate pridobiti kopijo datoteke z dopolnitvami iz izvorne kode izdaje Git, ki jo uporabljate.
Preverite svojo različico tako, da vnesete `git version`, nato pa uporabite `git checkout tags/vX.Y.Z`, kjer `vX.Y.Z` ustreza različici Git, ki jo uporabljate.
Kopirajte datoteko `contrib/completion/git-completion.bash` nekam priročno, na primer v vaš domači imenik, in dodajte to v vašo datoteko `.bashrc`:

[source,console]
----
. ~/git-completion.bash
----

Ko ste enkrat opravili, spremenite vaš direktorij v repozitorij Git in vpišite:

[source,console]
----
$ git chec<tab>
----

… in Bash bo avtomatsko zaključeval na `git checkout`.
To deluje z vsemi podukazi Git-a, parametri ukazne vrstice in daljavami ter t.i. imeni ref, kjer je ustrezno.

Uporabno je tudi prilagoditi vaš poziv ali terminal, da prikazuje informacije o trenutnem direktoriju Git.
To je lahko enostavno ali kompleksno, kakor želite, vendar so v splošnem nekateri deli informacij, ki jih večina ljudi želi, kot je trenutna veja in status delovnega direktorija.
Da to dodate k vašemu pozivu, samo kopirajte `contrib/completion/git-prompt.sh` datoteko iz izvornega repozitorija Git v vaš domači direktorij in dodajte nekaj takega v vaš `.bashrc`:

[source,console]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

`\w` pomeni izpis trenutnega delovnega direktorija, `\$` izpiše del poziva `$` in `__git_ps1 " (%s)"` pokliče funkcijo, ki jo ponuja `git-prompt.sh` z argumentom oblikovanja.
Sedaj bo vaš bash poziv izgledal, kot da ko ste kjerkoli znotraj Git kontroliranega projekta:

.Customized `bash` prompt.
image::images/git-bash.png[Customized `bash` prompt.]

Obe od teh skript prihajata s koristno dokumentacijo; poglejte vsebino `git-completion.bash` in `git-prompt.sh` za več informacij.
