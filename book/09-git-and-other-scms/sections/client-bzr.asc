==== Git in Bazaar

Med DVCS-ji je znan tudi https://bazaar.canonical.com[Bazaar^].
Bazaar je brezplačen in odprtokoden ter je del https://www.gnu.org[projekta GNU^].
Obnaša se zelo drugače kot Git.
Včasih morate za isto stvar kot pri Git uporabiti drugo ključno besedo, nekatere pogoste ključne besede pa nimajo enakega pomena.
Zlasti upravljanje vej je zelo drugačno in lahko povzroči zmedo, še posebej, če nekdo prihaja iz Gitovega vesolja.
Kljub temu pa je mogoče delati v repozitoriju Bazaar iz repozitorija Git.

Obstaja veliko projektov, ki vam omogočajo uporabo Gita kot odjemalca Bazaar.
Tukaj bomo uporabili projekt Felipeja Contrerase, ki ga lahko najdete na https://github.com/felipec/git-remote-bzr[^].
Za namestitev preprosto prenesite datoteko `git-remote-bzr` v mapo, ki je vsebovana v vaši `$PATH`:

[source,console]
----
$ wget https://raw.github.com/felipec/git-remote-bzr/master/git-remote-bzr -O ~/bin/git-remote-bzr
$ chmod +x ~/bin/git-remote-bzr
----

Rabili boste nameščen tudi Bazaar.
To je vse!

===== Ustvarite repozitorij Git iz repozitorija Bazaar

Uporaba je preprosta.
Dovolj je, da klonirate repozitorij Bazaar tako, da ga predhodno označite z `bzr::`.
Ker Git in Bazaar oba naredita popolna klona na vašo napravo, je mogoče pripeti Gitov klon klonu Bazaar na vaši lokalni napravi, vendar to ni priporočljivo.
Lažje je pripeti klon Git neposredno na isto mesto, kot je pritrjen klon Bazaar - osrednji repozitorij.

Recimo, da ste delali z oddaljenim repozitorijem, ki se nahaja na naslovu `bzr+ssh://developer@mybazaarserver:myproject`.
Potem ga morate klonirati na naslednji način:

[source,console]
----
$ git clone bzr::bzr+ssh://developer@mybazaarserver:myproject myProject-Git
$ cd myProject-Git
----

Trenutno je vaš repozitorij Git ustvarjen, vendar ni stisnjen za optimalno uporabo diska.
Zato bi morali očistiti in stisniti vaš repozitorij Git, še posebej, če je velik:

[source,console]
----
$ git gc --aggressive
----

===== Veje Bazaar

Bazaar vam dovoljuje samo kloniranje vej, vendar lahko repozitorij vsebuje več vej in `git-remote-bzr` lahko klonira vse.
Na primer, da klonirate vejo:

[source,console]
----
$ git clone bzr::bzr://bzr.savannah.gnu.org/emacs/trunk emacs-trunk
----

In da klonirate celoten repozitorij:

[source,console]
----
$ git clone bzr::bzr://bzr.savannah.gnu.org/emacs emacs
----

Drugi ukaz klonira vse veje, ki so vsebovane v repozitoriju emacs; vendar pa je mogoče določiti tudi nekatere veje:

[source,console]
----
$ git config remote-bzr.branches 'trunk, xwindow'
----

Nekateri oddaljeni repozitoriji vam ne dovolijo, da navedete seznam njihovih vej, in v tem primeru jih morate ročno navesti kljub temu, da bi lahko nastavitve določili v ukazu kloniranja, tako da boste morda našli naslednji način enostavnejši:

[source,console]
----
$ git init emacs
$ git remote add origin bzr::bzr://bzr.savannah.gnu.org/emacs
$ git config remote-bzr.branches 'trunk, xwindow'
$ git fetch
----

===== Ignorirajte, kar je ignorirano z .bzrignore

Ker delate na projektu, ki ga upravlja Bazaar, ne bi smeli ustvariti datoteke `.gitignore`, saj bi jo lahko po nesreči vključili v nadzor različic in druge ljudi, ki delajo z Bazaarjem, bi to zmotilo.
Rešitev je, da ustvarite datoteko `.git/info/exclude` bodisi kot simbolično povezavo ali kot navadno datoteko.
Kako to storiti, bomo videli pozneje.

Bazaar uporablja za ignoriranje datotek isti model kot Git, vendar ima tudi dve funkciji, ki nimata ekvivalenta v Gitu.
Popoln opis lahko najdete v http://doc.bazaar.canonical.com/bzr.2.7/en/user-reference/ignore-help.html[dokumentaciji^].
Ti dve funkciji sta:

1. `!!` vam omogoča, da ignorirate določene vzorce datotek, tudi če so navedene z uporabo pravila `!`.
2. `RE:` na začetku vrstice vam omogoča, da določite https://docs.python.org/3/library/re.html[Pythonov regularni izraz^] (Git dovoljuje le globe lupine).

Posledično je treba upoštevati dve različni situaciji:

1. Če datoteka `.bzrignore` ne vsebuje nobene od teh dveh posebnih predpon, potem jo lahko preprosto simbolično povežete v repozitoriju: `ln -s .bzrignore .git/info/exclude`.
2. V nasprotnem primeru morate ustvariti datoteko `.git/info/exclude` in jo prilagoditi, da bo ignorirala natanko iste datoteke v `.bzrignore`.

V vsakem primeru morate ostati pozorni na morebitne spremembe v `.bzrignore`, da zagotovite, da datoteka `.git/info/exclude` vedno odraža `.bzrignore`.
Če bi se namreč datoteka `.bzrignore` spremenila in vsebovala eno ali več vrstic, ki se začnejo s `!!` ali `RE:`, Git ne bi mogel interpretirati teh vrstic, zato bi morali prilagoditi datoteko `.git/info/exclude`, da bi ignorirala iste datoteke kot tiste, ki so bile ignorirane z `.bzrignore`.
Poleg tega, če je bila datoteka `.git/info/exclude` simbolična povezava, morate najprej izbrisati simbolično povezavo, kopirati `.bzrignore` v `.git/info/exclude` in nato prilagoditi slednjo.
Pazite pa pri njenem ustvarjanju, saj z Gitom ni mogoče ponovno vključiti datoteke, če je njen nadrejeni imenik izključen.

===== Pridobite spremembe iz oddaljenega repozitorija

Za pridobitev sprememb iz oddaljenega strežnika lahko uporabite običajne ukaze Git za povlek sprememb.
Predpostavimo, da so vaše spremembe v veji `master`, in nato z ukazi Git združite ali ponovno bazirate vaše delo na veji `origin/master`:

[source,console]
----
$ git pull --rebase origin
----

===== Potisnite vaše delo na oddaljeni repozitorij

Ker ima tudi Bazaar zasnovo potrditev združitev, ne bo nobenih težav, če potrditev združitve potisnete.
Torej lahko delate na veji, združite spremembe v `master` in potisnete svoje delo.
Nato ustvarite veje, preizkusite in zabeležite svoje delo kot običajno.
Nazadnje potisnete svoje delo v repozitorij Bazaar:

[source,console]
----
$ git push origin master
----

===== Opozorila

Okvir oddaljenih pomočnikov Git ima nekatere omejitve, ki veljajo.
Zlasti naslednji ukazi ne delujejo:

* `git push origin :branch-to-delete` (Bazaar ne more sprejeti brisanja reference na ta način)
* `git push origin old:new` (potisnil bo na `old`)
* `git push --dry-run origin branch` (bo potisnil)

===== Povzetek

Ker sta modela Gita in Bazarja podobna, ni veliko ovir pri delu preko meje.
Dokler pazite na omejitve in vedno veste, da oddaljeni repozitorij ni privzeto Git, boste v redu.
