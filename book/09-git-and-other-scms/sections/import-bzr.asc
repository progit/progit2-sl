==== Bazaar
(((Bazaar)))(((Importing, from Bazaar)))

Bazaar je orodje DVCS, podobno kot Git, zato je precej preprosto pretvoriti repozitorij Bazaar v repozitorij Git.
Za to morate uvoziti vtičnik `bzr-fastimport`.

===== Pridobitev vtičnika bzr-fastimport

Postopek za namestitev vtičnika fastimport se razlikuje med operacijskimi sistemi, ki so podobni UNIX-u in sistemom Windows.
V prvem primeru je najlažje namestiti paket `bzr-fastimport`, ki bo namestil vse potrebne odvisnosti.

Na primer, v sistemu Debian in njegovih izpeljankah bi naredili naslednje:

[source,console]
----
$ sudo apt-get install bzr-fastimport
----

Z RHEL bi naredili naslednje:

[source,console]
----
$ sudo yum install bzr-fastimport
----

Na Fedori od izdaje 22 je nov paketni upravitelj dnf:

[source,console]
----
$ sudo dnf install bzr-fastimport
----

Če paket ni na voljo, ga morate namestiti kot vtičnik:

[source,console]
----
$ mkdir --parents ~/.bazaar/plugins     # creates the necessary folders for the plugins
$ cd ~/.bazaar/plugins
$ bzr branch lp:bzr-fastimport fastimport   # imports the fastimport plugin
$ cd fastimport
$ sudo python setup.py install --record=files.txt   # installs the plugin
----

Za delovanje tega vtičnika boste potrebovali tudi Pythonov modul `fastimport`.
Preverite, ali je prisoten ali ne, in ga namestite z naslednjimi ukazi:

[source,console]
----
$ python -c "import fastimport"
Traceback (most recent call last):
  File "<string>", line 1, in <module>
ImportError: No module named fastimport
$ pip install fastimport
----

Če ni na voljo, ga lahko prenesete na naslovu https://pypi.org/project/fastimport/[^].

V drugem primeru (na sistemu Windows), se `bzr-fastimport` samodejno namesti z neodvisno različico in privzeto namestitvijo (pustite vse potrditvene okvirčke označene).
V tem primeru vam torej ni treba storiti nič.

Na tem mestu se način uvoza repozitorija Bazaar razlikuje glede na to, ali imate samo eno vejo ali delate z več vejami v repozitoriju.

===== Projekt z eno vejo

Sedaj s `cd` pojdite v direktorij, ki vsebuje vaš repozitorij Bazaar in inicializirajte repozitorij Git:

[source,console]
----
$ cd /path/to/the/bzr/repository
$ git init
----

Sedaj lahko preprosto izvozite svoj repozitorij Bazaar in ga pretvorite v repozitorij Git z uporabo naslednjega ukaza:

[source,console]
----
$ bzr fast-export --plain . | git fast-import
----

Odvisno od velikosti projekta se repozitorij Git zgradi v času od nekaj sekund do nekaj minut.

===== Primer projekta z glavno vejo in delovno vejo

Lahko uvozite tudi repozitorij Bazaar, ki vsebuje veje.
Najprej predpostavimo, da imate dve veji: ena predstavlja glavno vejo (myProject.trunk), druga pa delovno vejo (myProject.work).

[source,console]
----
$ ls
myProject.trunk myProject.work
----

Ustvarite repozitorij Git in pojdite vanj s `cd`:

[source,console]
----
$ git init git-repo
$ cd git-repo
----

Povlecite vejo `master` v Git:

[source,console]
----
$ bzr fast-export --export-marks=../marks.bzr ../myProject.trunk | \
git fast-import --export-marks=../marks.git
----

Povlecite delovno vejo v Git:

[source,console]
----
$ bzr fast-export --marks=../marks.bzr --git-branch=work ../myProject.work | \
git fast-import --import-marks=../marks.git --export-marks=../marks.git
----

Zdaj vam `git branch` pokaže vejo `master` in vejo `work`.
Preverite dnevnike, da se prepričate, da so popolni in izbrišite datoteki `marks.bzr` in `marks.git`.

===== Sinhronizacija področja priprave

Ne glede na število vej, ki jih imate in na način uvoza, vaše področje priprave ni usklajeno s `HEAD` in prav tako ni usklajeno z uvozom več vej vaš delovni imenik.
To težavo lahko enostavno rešite z naslednjim ukazom:

[source,console]
----
$ git reset --hard HEAD
----

===== Ignoriranje datotek, ki so bile ignorirane z .bzrignore

Zdaj si oglejmo datoteke, ki jih je treba prezreti.
Prva stvar, ki jo morate storiti, je preimenovanje datoteke `.bzrignore` v `.gitignore`.
Če datoteka `.bzrignore` vsebuje eno ali več vrstic, ki se začnejo z "!!" ali "RE:", jo boste morali spremeniti in morda ustvariti več datotek `.gitignore`, da boste prezrli enake datoteke, kot jih je ignoriral Bazaar.

Nazadnje boste morali ustvariti potrditev, ki vsebuje to spremembo za migracijo:

[source,console]
----
$ git mv .bzrignore .gitignore
$ # modify .gitignore if needed
$ git commit -am 'Migration from Bazaar to Git'
----

===== Pošiljanje vašega repozitorija na strežnik

In sedaj smo tu!
Sedaj lahko potisnete repozitorij na njegov novi domači strežnik:

[source,console]
----
$ git remote add origin git@my-git-server:mygitrepository.git
$ git push origin --all
$ git push origin --tags
----

Vaš repozitorij Git je pripravljen za uporabo.
