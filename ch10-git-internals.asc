[[ch10-git-internals]]
== Notranjost Gita

Morda ste preskočili na to poglavje iz prejšnjega poglavja ali ste morda prišli sem po branju preostanka knjige - v katerem koli primeru, to je, kjer bomo pokrili notranje delovanje in implementacijo Gita.
Ugotovili smo, da je učenje teh informacij v osnovi pomembno za razumevanje, kako uporaben in močan Git je, vendar ostali so nam trdili, da je lahko zmedeno in nepotrebno kompleksno za začetnike.
Vseeno, smo naredili to diskusijo v zadnjem poglavju knjige, da ga lahko preberete prej ali kasneje v vašem procesu učenja.
Odločitev prepuščamo vam.

Sedaj ko ste tu, pričnimo.
Najprej, če ni še dovolj jasno, Git je v bistvu vsebinsko naslavljajoč datotečni sistem z VCS uporabniškim vmesnikom napisanim na vrhu njega.
Nekoliko se boste o tem naučili, kaj to pomeni.

V zgodnjih dnega Gita (večinoma pred 1.5) je bil uporabniški vmesnik veliko bolj kompleksen, ker je povdarjal ta datotečni sistem namesto poliranega VCS-ja.
V zadnjih nekaj letih je bil UI rafiniran dokler ni postal kakor čist in enostaven za uporabo od katerega koli sistema na voljo; vendar pogostokrat stereotip ostaja o zgodnjem UI Gita, da je kompleksen in težek se za naučiti.

Datotečni sistem naslavljanja vsebine je izjemno kul, torej bomo pokrili prvo to v tem poglavju; nato se boste naučili o mehanizmih transporta in opravilih vzdrževanja repozitorija, s katerimi se boste eventuelno morali ukvarjati.

include::book/10-git-internals/sections/plumbing-porcelain.asc[]

include::book/10-git-internals/sections/objects.asc[]

include::book/10-git-internals/sections/refs.asc[]

include::book/10-git-internals/sections/packfiles.asc[]

include::book/10-git-internals/sections/refspec.asc[]

include::book/10-git-internals/sections/transfer-protocols.asc[]

include::book/10-git-internals/sections/maintenance.asc[]

include::book/10-git-internals/sections/environment.asc[]

=== Povzetek

Morali bi imeti precej dobro razumevanje, kaj Git dela v ozadju in do neke mere, kako je implementiran.
To poglavje je pokrilo število ukazov napeljave - ukazi, ki so na nižjem nivoju in so enostavnejši od ukazov keramike, o katerih ste se naučili v preostanku knjige.
Razumevanje delovanja Gita na nižjem nivoju bi moralo narediti lažje za razumeti, zakaj dela, kar dela, in tudi pisati vaša lastna orodja in pomagalne skripte, da za vas naredijo vaš določen potek dela.

Git je kot datotečni sistem naslavljanja vsebine zelo močno orodje, ki ga lahko enostavno uporabite za nekaj več kot samo VCS.
Upamo, da lahko uporabljate vaše novo pridobljeno znanje notranjosti Gita za implementacijo vaše lastne kul aplikacije te tehnologije in se z uporabo Gita počutite udobneje na naprednejših nivojih.
